!function(){"use strict"}(),angular.module("app",["app.controllers","app.services","ngRoute"]).config(["$routeProvider",function(e){e.when("/",{controller:"MainController",templateUrl:"main.html"}).when("/register",{controller:"RegisterController",templateUrl:"register.html"}).otherwise({controller:"NotFoundController",templateUrl:"not_found.html"})}]).run(["$rootScope","$location",function(e,t){var n="ws://"+t.host()+":"+t.port(),r=new WebSocket(n);r.onmessage=function(t){var n=JSON.parse(t.data),r="ws:"+n.topic;e.$broadcast(r,n.data)}}]),function(){"use strict"}(),angular.module("app.controllers",[]).controller("ApplicationController",["$scope","$location","SessionsService",function(e,t,n){e.$on("login",function(t,n){e.currentUser=n}),e.logout=function(){n.logout(),delete e.currentUser,t.path("register")}}]).controller("MainController",["$scope","$location","AlbumsService",function(e,t,n){e.albums=[],e.$on("ws:new public album",function(t,n){n.creator!==e.currentUser.username&&(e.albums.unshift(n),e.$apply())}),e.$on("ws:removed album",function(t,n){n.creator!==e.currentUser.username&&(_.remove(e.albums,{_id:n._id}),e.$apply())}),n.query().success(function(t){e.albums=t}).error(function(e,n){401===n&&t.path("/register")}),e.newAlbum={},e.saveAlbum=function(){return e.newAlbum.title&&e.newAlbum.artist?void n.save(e.newAlbum).success(function(t){e.albums.unshift(t),e.newAlbum={}}):void alert("Please enter a title and an artist.")},e.toggleStatus=function(t){n.toggleStatus(t._id,t["public"]).success(function(){_.find(e.albums,function(e){e._id===t._id&&(e["public"]=!e["public"])})})},e.deleteAlbum=function(t){n["delete"](t).success(function(){_.remove(e.albums,{_id:t})})}}]).controller("RegisterController",["$scope","$location","SessionsService",function(e,t,n){e.newUser={},e.register=function(){return e.newUser.username&&e.newUser.password?void n.register(e.newUser).success(function(){n.login(e.newUser.username,e.newUser.password).then(function(n){e.$emit("login",n.data.user),t.path("/")})}).error(function(e,t){alert(412===t?"Username already exists! Try another.":t+": "+e)}):void alert("Please enter a username and password")},e.login=function(r,o){n.login(r,o).then(function(n){e.$emit("login",n.data.user),t.path("/")})}}]).controller("NotFoundController",["$scope",function(e){e.message="Not found!"}]),function(){"use strict"}();var alert=alert;angular.module("app.services",[]).service("AlbumsService",["$http",function(e){this.query=function(){return e.get("/api/albums")},this.save=function(t){return e.post("/api/albums",t)},this.toggleStatus=function(t,n){return e.put("/api/albums/"+t,{"public":!n})},this["delete"]=function(t){return e["delete"]("/api/albums/"+t)}}]).service("SessionsService",["$http",function(e){this.register=function(t){return e.post("/api/users",t)},this.login=function(t,n){var r={username:t,password:n};return e.post("/api/sessions",r).success(function(t){return e.defaults.headers.common["x-auth"]=t.token,t}).error(function(e,t){404===t&&alert("Wrong username or password")})},this.logout=function(){delete e.defaults.headers.common["x-auth"]}}]);
//# sourceMappingURL=data:application/json;base64,