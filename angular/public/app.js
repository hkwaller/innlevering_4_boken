"use strict";angular.module("app",["app.controllers","app.services","ngRoute"]).config(["$routeProvider",function(e){e.when("/",{controller:"MainController",templateUrl:"main.html"}).when("/register",{controller:"RegisterController",templateUrl:"register.html"}).otherwise({controller:"NotFoundController",templateUrl:"not_found.html"})}]).run(["$rootScope","$location",function(e,t){var n="ws://"+t.host()+":"+t.port(),o=new WebSocket(n);o.onmessage=function(t){var n=JSON.parse(t.data),o="ws:"+n.topic;e.$broadcast(o,n.data)}}]),angular.module("app.controllers",[]).controller("ApplicationController",["$scope","$location","SessionsService",function(e,t,n){e.$on("login",function(t,n){e.currentUser=n}),e.logout=function(){n.logout(),delete e.currentUser,t.path("register")}}]).controller("MainController",["$scope","$location","AlbumsService",function(e,t,n){e.albums=[],e.$on("ws:new public album",function(t,n){n.creator!==e.currentUser.username&&(e.albums.unshift(n),e.$apply())}),e.$on("ws:removed album",function(t,n){n.creator!==e.currentUser.username&&(_.remove(e.albums,{_id:n._id}),e.$apply())}),n.query().success(function(t){e.albums=t}).error(function(e,n){401===n&&(t.path("/register"),alert("You need to be logged in to go here!"))}),e.newAlbum={},e.saveAlbum=function(){return e.newAlbum.title&&e.newAlbum.artist?void n.save(e.newAlbum).success(function(t){e.albums.unshift(t),e.newAlbum={}}):void alert("Please enter a title and an artist.")},e.toggleStatus=function(t){n.toggleStatus(t._id,t["public"]).success(function(){_.find(e.albums,function(e){e._id===t._id&&(e["public"]=!e["public"])})})},e.deleteAlbum=function(t){n["delete"](t).success(function(){_.remove(e.albums,{_id:t})})}}]).controller("RegisterController",["$scope","$location","SessionsService",function(e,t,n){e.newUser={},e.register=function(){return e.newUser.username&&e.newUser.password?void n.register(e.newUser).success(function(){n.login(e.newUser.username,e.newUser.password).then(function(n){e.$emit("login",n.data.user),t.path("/")})}).error(function(e,t){alert(412===t?"Username already exists! Try another.":t+": "+e)}):void alert("Please enter a username and password")},e.login=function(o,r){n.login(o,r).then(function(n){e.$emit("login",n.data.user),t.path("/")})}}]).controller("NotFoundController",["$scope",function(e){e.message="Not found!"}]),angular.module("app.services",[]).service("AlbumsService",["$http",function(e){this.query=function(){return e.get("/api/albums")},this.save=function(t){return e.post("/api/albums",t)},this.toggleStatus=function(t,n){return e.put("/api/albums/"+t,{"public":!n})},this["delete"]=function(t){return e["delete"]("/api/albums/"+t)}}]).service("SessionsService",["$http",function(e){this.register=function(t){return e.post("/api/users",t)},this.login=function(t,n){var o={username:t,password:n};return e.post("/api/sessions",o).success(function(t){return e.defaults.headers.common["x-auth"]=t.token,t}).error(function(e,t){404===t&&alert("Wrong username or password")})},this.logout=function(){delete e.defaults.headers.common["x-auth"]}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzLmpzIiwic2VydmljZXMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsImNvbnRyb2xsZXIiLCJ0ZW1wbGF0ZVVybCIsIm90aGVyd2lzZSIsInJ1biIsIiRyb290U2NvcGUiLCIkbG9jYXRpb24iLCJ1cmwiLCJob3N0IiwicG9ydCIsImNvbm5lY3Rpb24iLCJXZWJTb2NrZXQiLCJvbm1lc3NhZ2UiLCJldmVudCIsInBheWxvYWQiLCJKU09OIiwicGFyc2UiLCJkYXRhIiwiZXZlbnROYW1lIiwidG9waWMiLCIkYnJvYWRjYXN0IiwiJHNjb3BlIiwiU2Vzc2lvbnNTZXJ2aWNlIiwiJG9uIiwidXNlciIsImN1cnJlbnRVc2VyIiwibG9nb3V0IiwicGF0aCIsIkFsYnVtc1NlcnZpY2UiLCJhbGJ1bXMiLCJhbGJ1bSIsImNyZWF0b3IiLCJ1c2VybmFtZSIsInVuc2hpZnQiLCIkYXBwbHkiLCJfIiwicmVtb3ZlIiwiX2lkIiwicXVlcnkiLCJzdWNjZXNzIiwiZXJyb3IiLCJzdGF0dXMiLCJhbGVydCIsIm5ld0FsYnVtIiwic2F2ZUFsYnVtIiwidGl0bGUiLCJhcnRpc3QiLCJzYXZlIiwidG9nZ2xlU3RhdHVzIiwiZmluZCIsImN1cnJlbnRBbGJ1bSIsImRlbGV0ZUFsYnVtIiwiaWQiLCJuZXdVc2VyIiwicmVnaXN0ZXIiLCJwYXNzd29yZCIsImxvZ2luIiwidGhlbiIsInJlc3BvbnNlIiwiJGVtaXQiLCJtZXNzYWdlIiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCIsInBvc3QiLCJjdXJyZW50U3RhdHVzIiwicHV0IiwicHVibGljIiwibG9naW5BdHRlbXB0IiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwidG9rZW4iXSwibWFwcGluZ3MiOiJBQUFBLFlBRUFBLFNBQUFDLE9BQUEsT0FDQSxrQkFDQSxlQUNBLFlBR0FDLFFBQUEsaUJBQUEs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LEVBQUFzQyxNQUFBLFFBQUFELEVBQUF6QyxLQUFBTyxNQUNBbEIsRUFBQXFCLEtBQUEsV0FLQTFCLFdBQUEsc0JBQUEsU0FBQSxTQUFBb0IsR0FDQUEsRUFBQXVDLFFBQUEsZ0JDMUdBaEUsUUFBQUMsT0FBQSxtQkFFQWdFLFFBQUEsaUJBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBekIsTUFBQSxXQUNBLE1BQUF3QixHQUFBRSxJQUFBLGdCQUdBRCxLQUFBaEIsS0FBQSxTQUFBSixHQUNBLE1BQUFtQixHQUFBRyxLQUFBLGNBQUF0QixJQUdBb0IsS0FBQWYsYUFBQSxTQUFBSSxFQUFBYyxHQUNBLE1BQUFKLEdBQUFLLElBQUEsZUFBQWYsR0FBQWdCLFVBQUFGLEtBR0FILEtBQUFBLFVBQUEsU0FBQVgsR0FDQSxNQUFBVSxHQUFBQSxVQUFBLGVBQUFWLE9BSUFTLFFBQUEsbUJBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBVCxTQUFBLFNBQUE5QixHQUNBLE1BQUFzQyxHQUFBRyxLQUFBLGFBQUF6QyxJQUdBdUMsS0FBQVAsTUFBQSxTQUFBeEIsRUFBQXVCLEdBQ0EsR0FBQWMsSUFDQXJDLFNBQUFBLEVBQ0F1QixTQUFBQSxFQUdBLE9BQUFPLEdBQUFHLEtBQUEsZ0JBQUFJLEdBQ0E5QixRQUFBLFNBQUFtQixHQUVBLE1BREFJLEdBQUFRLFNBQUFDLFFBQUFDLE9BQUEsVUFBQWQsRUFBQWUsTUFDQWYsSUFFQWxCLE1BQUEsU0FBQW9CLEVBQUFuQixHQUNBLE1BQUFBLEdBQ0FDLE1BQUEsaUNBS0FxQixLQUFBckMsT0FBQSxpQkFDQW9DLEdBQUFRLFNBQUFDLFFBQUFDLE9BQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICdhcHAuY29udHJvbGxlcnMnLFxuICAgICdhcHAuc2VydmljZXMnLFxuICAgICduZ1JvdXRlJ1xuXSlcblxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAkcm91dGVQcm92aWRlclxuICAgICAgICAud2hlbignLycsIHtjb250cm9sbGVyOiAnTWFpbkNvbnRyb2xsZXInLCB0ZW1wbGF0ZVVybDogJ21haW4uaHRtbCd9KVxuICAgICAgICAud2hlbignL3JlZ2lzdGVyJywge2NvbnRyb2xsZXI6ICdSZWdpc3RlckNvbnRyb2xsZXInLCB0ZW1wbGF0ZVVybDogJ3JlZ2lzdGVyLmh0bWwnfSlcbiAgICAgICAgLm90aGVyd2lzZSh7Y29udHJvbGxlcjogJ05vdEZvdW5kQ29udHJvbGxlcicsIHRlbXBsYXRlVXJsOiAnbm90X2ZvdW5kLmh0bWwnfSk7XG59KVxuXG4ucnVuKGZ1bmN0aW9uICgkcm9vdFNjb3BlLCAkbG9jYXRpb24pIHtcbiAgICB2YXIgdXJsID0gJ3dzOi8vJyArICRsb2NhdGlvbi5ob3N0KCkgKyAnOicgKyAkbG9jYXRpb24ucG9ydCgpO1xuICAgIHZhciBjb25uZWN0aW9uID0gbmV3IFdlYlNvY2tldCh1cmwpO1xuXG4gICAgY29ubmVjdGlvbi5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpO1xuICAgICAgICB2YXIgZXZlbnROYW1lID0gJ3dzOicgKyBwYXlsb2FkLnRvcGljO1xuXG4gICAgICAgICRyb290U2NvcGUuJGJyb2FkY2FzdChldmVudE5hbWUsIHBheWxvYWQuZGF0YSk7XG4gICAgfTtcbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcC5jb250cm9sbGVycycsIFtdKVxuXG4uY29udHJvbGxlcignQXBwbGljYXRpb25Db250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgJGxvY2F0aW9uLCBTZXNzaW9uc1NlcnZpY2UpIHtcbiAgICAkc2NvcGUuJG9uKCdsb2dpbicsIGZ1bmN0aW9uIChldmVudCwgdXNlcikge1xuICAgICAgICAkc2NvcGUuY3VycmVudFVzZXIgPSB1c2VyO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgU2Vzc2lvbnNTZXJ2aWNlLmxvZ291dCgpO1xuICAgICAgICBkZWxldGUgJHNjb3BlLmN1cnJlbnRVc2VyO1xuICAgICAgICAkbG9jYXRpb24ucGF0aCgncmVnaXN0ZXInKTtcbiAgICB9O1xufSlcblxuLmNvbnRyb2xsZXIoJ01haW5Db250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgJGxvY2F0aW9uLCBBbGJ1bXNTZXJ2aWNlKSB7XG4gICAgJHNjb3BlLmFsYnVtcyA9IFtdO1xuXG4gICAgJHNjb3BlLiRvbignd3M6bmV3IHB1YmxpYyBhbGJ1bScsIGZ1bmN0aW9uIChldmVudCwgYWxidW0pIHtcbiAgICAgICAgaWYgKGFsYnVtLmNyZWF0b3IgIT09ICRzY29wZS5jdXJyZW50VXNlci51c2VybmFtZSkge1xuICAgICAgICAgICAgJHNjb3BlLmFsYnVtcy51bnNoaWZ0KGFsYnVtKTtcbiAgICAgICAgICAgICRzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgJHNjb3BlLiRvbignd3M6cmVtb3ZlZCBhbGJ1bScsIGZ1bmN0aW9uIChldmVudCwgYWxidW0pIHtcbiAgICAgICAgaWYgKGFsYnVtLmNyZWF0b3IgIT09ICRzY29wZS5jdXJyZW50VXNlci51c2VybmFtZSkge1xuICAgICAgICAgICAgXy5yZW1vdmUoJHNjb3BlLmFsYnVtcywge19pZDogYWxidW0uX2lkfSk7XG4gICAgICAgICAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIEFsYnVtc1NlcnZpY2UucXVlcnkoKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoYWxidW1zKSB7XG4gICAgICAgICAgICAkc2NvcGUuYWxidW1zID0gYWxidW1zO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9yZWdpc3RlcicpO1xuICAgICAgICAgICAgICAgIGFsZXJ0KCdZb3UgbmVlZCB0byBiZSBsb2dnZWQgaW4gdG8gZ28gaGVyZSEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAkc2NvcGUubmV3QWxidW0gPSB7fTtcblxuICAgICRzY29wZS5zYXZlQWxidW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghJHNjb3BlLm5ld0FsYnVtLnRpdGxlIHx8ICEkc2NvcGUubmV3QWxidW0uYXJ0aXN0KSB7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGVudGVyIGEgdGl0bGUgYW5kIGFuIGFydGlzdC4nKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIEFsYnVtc1NlcnZpY2Uuc2F2ZSgkc2NvcGUubmV3QWxidW0pXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoYWxidW0pIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuYWxidW1zLnVuc2hpZnQoYWxidW0pO1xuICAgICAgICAgICAgICAgICRzY29wZS5uZXdBbGJ1bSA9IHt9O1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgICRzY29wZS50b2dnbGVTdGF0dXMgPSBmdW5jdGlvbiAoYWxidW0pIHtcbiAgICAgICAgQWxidW1zU2VydmljZS50b2dnbGVTdGF0dXMoYWxidW0uX2lkLCBhbGJ1bS5wdWJsaWMpLnN1Y2Nlc3MoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgXy5maW5kKCRzY29wZS5hbGJ1bXMsIGZ1bmN0aW9uIChjdXJyZW50QWxidW0pIHtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEFsYnVtLl9pZCA9PT0gYWxidW0uX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBbGJ1bS5wdWJsaWMgPSAhY3VycmVudEFsYnVtLnB1YmxpYztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgICRzY29wZS5kZWxldGVBbGJ1bSA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICBBbGJ1bXNTZXJ2aWNlLmRlbGV0ZShpZCkuc3VjY2VzcyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfLnJlbW92ZSgkc2NvcGUuYWxidW1zLCB7X2lkOiBpZH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xufSlcblxuLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgU2Vzc2lvbnNTZXJ2aWNlKSB7XG4gICAgJHNjb3BlLm5ld1VzZXIgPSB7fTtcblxuICAgICRzY29wZS5yZWdpc3RlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCEkc2NvcGUubmV3VXNlci51c2VybmFtZSB8fCAhJHNjb3BlLm5ld1VzZXIucGFzc3dvcmQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdQbGVhc2UgZW50ZXIgYSB1c2VybmFtZSBhbmQgcGFzc3dvcmQnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIFNlc3Npb25zU2VydmljZS5yZWdpc3Rlcigkc2NvcGUubmV3VXNlcilcbiAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBTZXNzaW9uc1NlcnZpY2UubG9naW4oJHNjb3BlLm5ld1VzZXIudXNlcm5hbWUsICRzY29wZS5uZXdVc2VyLnBhc3N3b3JkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YS51c2VyKTtcbiAgICAgICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24gKG1lc3NhZ2UsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT09IDQxMikgeyAvLyBiYWQgcmVxdWVzdDsgdXNlcm5hbWUgZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdVc2VybmFtZSBhbHJlYWR5IGV4aXN0cyEgVHJ5IGFub3RoZXIuJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoc3RhdHVzICsgJzogJyArIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgIFNlc3Npb25zU2VydmljZS5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YS51c2VyKTtcbiAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvJyk7XG4gICAgICAgIH0pO1xuICAgIH07XG59KVxuXG4uY29udHJvbGxlcignTm90Rm91bmRDb250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSkge1xuICAgICRzY29wZS5tZXNzYWdlID0gJ05vdCBmb3VuZCEnO1xufSlcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2FwcC5zZXJ2aWNlcycsIFtdKVxuXG4uc2VydmljZSgnQWxidW1zU2VydmljZScsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHRoaXMucXVlcnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYWxidW1zJyk7XG4gICAgfTtcblxuICAgIHRoaXMuc2F2ZSA9IGZ1bmN0aW9uIChuZXdBbGJ1bSkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hbGJ1bXMnLCBuZXdBbGJ1bSk7XG4gICAgfTtcblxuICAgIHRoaXMudG9nZ2xlU3RhdHVzID0gZnVuY3Rpb24gKGlkLCBjdXJyZW50U3RhdHVzKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvYWxidW1zLycgKyBpZCwge3B1YmxpYzogIWN1cnJlbnRTdGF0dXN9KTtcbiAgICB9O1xuXG4gICAgdGhpcy5kZWxldGUgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9hbGJ1bXMvJyArIGlkKTtcbiAgICB9O1xufSlcblxuLnNlcnZpY2UoJ1Nlc3Npb25zU2VydmljZScsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHRoaXMucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcikge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHVzZXIpO1xuICAgIH07XG5cbiAgICB0aGlzLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICB2YXIgbG9naW5BdHRlbXB0ID0ge1xuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCBsb2dpbkF0dGVtcHQpXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsneC1hdXRoJ10gPSByZXNwb25zZS50b2tlbjtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uIChtZXNzYWdlLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSA0MDQpIHtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1dyb25nIHVzZXJuYW1lIG9yIHBhc3N3b3JkJyk7IC8vIFRPRE86IGRvIHRoaXMgaW4gY29udHJvbGxlciBzb21laG93XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHRoaXMubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkZWxldGUgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ3gtYXV0aCddO1xuICAgIH07XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=